{"ast":null,"code":"import React,{useEffect}from'react';import{useHistory}from\"react-router\";import*as qs from'query-string';import{useDispatch}from\"react-redux\";import{UpdateUser}from\"../../common/navigation/actions/NavigationActions\";export default function(props){var history=useHistory();var dispatch=useDispatch();var authorizationCode=qs.parse(props.location.search)[\"code\"];useEffect(function(){fetch(\"/oauth?code=\"+authorizationCode).then(function(response){return response.text();}).then(function(data){dispatch(UpdateUser(data));});history.push(\"/\");});return/*#__PURE__*/React.createElement(\"div\",null,\"authenticating....\");}","map":{"version":3,"sources":["/Users/vernon/Documents/University/2020Summer/SENG499/project/tabber-webapp/src/components/oauth/component/OAuth2Page.tsx"],"names":["React","useEffect","useHistory","qs","useDispatch","UpdateUser","props","history","dispatch","authorizationCode","parse","location","search","fetch","then","response","text","data","push"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,KAA+B,OAA/B,CACA,OAAQC,UAAR,KAAyB,cAAzB,CACA,MAAO,GAAKC,CAAAA,EAAZ,KAAoB,cAApB,CACA,OAAQC,WAAR,KAA0B,aAA1B,CACA,OAAQC,UAAR,KAAyB,mDAAzB,CAEA,cAAe,UAASC,KAAT,CAAqB,CAEhC,GAAMC,CAAAA,OAAO,CAAGL,UAAU,EAA1B,CACA,GAAMM,CAAAA,QAAQ,CAAGJ,WAAW,EAA5B,CAEA,GAAMK,CAAAA,iBAAiB,CAAGN,EAAE,CAACO,KAAH,CAASJ,KAAK,CAACK,QAAN,CAAeC,MAAxB,EAAgC,MAAhC,CAA1B,CACAX,SAAS,CAAC,UAAM,CACZY,KAAK,CAAC,eAAeJ,iBAAhB,CAAL,CACKK,IADL,CACU,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAT,EAAJ,EADlB,EAEKF,IAFL,CAEU,SAAAG,IAAI,CAAI,CACVT,QAAQ,CAACH,UAAU,CAACY,IAAD,CAAX,CAAR,CACH,CAJL,EAKAV,OAAO,CAACW,IAAR,CAAa,GAAb,EACH,CAPQ,CAAT,CASA,mBACI,oDADJ,CAGH","sourcesContent":["import React, {useEffect} from 'react';\nimport {useHistory} from \"react-router\";\nimport * as qs from 'query-string';\nimport {useDispatch} from \"react-redux\";\nimport {UpdateUser} from \"../../common/navigation/actions/NavigationActions\";\n\nexport default function(props: any) {\n\n    const history = useHistory();\n    const dispatch = useDispatch();\n\n    const authorizationCode = qs.parse(props.location.search)[\"code\"]\n    useEffect(() => {\n        fetch(\"/oauth?code=\"+authorizationCode)\n            .then(response => response.text())\n            .then(data => {\n                dispatch(UpdateUser(data));\n            })\n        history.push(\"/\")\n    })\n\n    return(\n        <div>authenticating....</div>\n    );\n}"]},"metadata":{},"sourceType":"module"}